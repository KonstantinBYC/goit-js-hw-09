{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAQ,CACZC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBA0BjC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAjCPT,EAAMC,KAAKgB,iBAAiB,UAI5B,SAAiBC,GACfA,EAAEC,iBAKF,IAJA,IAAMC,EAAUC,SAASrB,EAAMM,OAAOgB,OAChCC,EAAYC,OAAOxB,EAAMK,KAAKiB,OAChCG,EAAYD,OAAOxB,EAAMI,WAAWkB,OAE/BI,EAAI,EAAGA,GAAKN,EAASM,GAAK,EACjCnB,EAAcmB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBX,EAAA+B,OAAOC,QAAQ,qBAAoCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE1DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBX,EAAA+B,OAAOI,QAAQ,oBAAmCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE5DgB,GAAaF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Report } from 'notiflix/build/notiflix-report-aio';\n\nconst links = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\nlinks.form.addEventListener('submit', onClick);\n\n/* функція повертає результат ввода і вмикає функцію createPromise\n */\nfunction onClick(e) {\n  e.preventDefault();\n  const amountP = parseInt(links.amount.value);\n  const delayStep = Number(links.step.value);\n  let fistDelay = Number(links.firstDelay.value);\n\n  for (let i = 1; i <= amountP; i += 1) {\n    createPromise(i, fistDelay)\n      .then(({ position, delay }) => {\n        Report.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Report.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    fistDelay += delayStep;\n  }\n}\n// /*  function that create new promise\n//  *  position - amount of promises\n//  *  delay - first delay */\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$fivgP","parcelRequire","$ce04d3a99e08e73b$var$links","form","document","querySelector","firstDelay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","amountP","parseInt","value","delayStep","Number","fistDelay","i","then","param","Report","success","concat","catch","failure"],"version":3,"file":"03-promises.90aba990.js.map"}